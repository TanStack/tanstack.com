/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SponsorsEmbedRouteImport } from './routes/sponsors-embed'
import { Route as PartnersEmbedRouteImport } from './routes/partners-embed'
import { Route as MerchRouteImport } from './routes/merch'
import { Route as BuilderRouteImport } from './routes/builder'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as LibrariesRouteRouteImport } from './routes/_libraries/route'
import { Route as LibraryIdRouteRouteImport } from './routes/$libraryId/route'
import { Route as StatsIndexRouteImport } from './routes/stats/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as LibrariesIndexRouteImport } from './routes/_libraries/index'
import { Route as LibraryIdIndexRouteImport } from './routes/$libraryId/index'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as LibrariesTermsRouteImport } from './routes/_libraries/terms'
import { Route as LibrariesSupportRouteImport } from './routes/_libraries/support'
import { Route as LibrariesPrivacyRouteImport } from './routes/_libraries/privacy'
import { Route as LibrariesPartnersRouteImport } from './routes/_libraries/partners'
import { Route as LibrariesPaidSupportRouteImport } from './routes/_libraries/paid-support'
import { Route as LibrariesMaintainersRouteImport } from './routes/_libraries/maintainers'
import { Route as LibrariesLoginRouteImport } from './routes/_libraries/login'
import { Route as LibrariesLearnRouteImport } from './routes/_libraries/learn'
import { Route as LibrariesEthosRouteImport } from './routes/_libraries/ethos'
import { Route as LibrariesDashboardRouteImport } from './routes/_libraries/dashboard'
import { Route as LibrariesBrandGuideRouteImport } from './routes/_libraries/brand-guide'
import { Route as LibrariesBlogRouteImport } from './routes/_libraries/blog'
import { Route as LibrariesAccountRouteImport } from './routes/_libraries/account'
import { Route as LibraryIdVersionRouteImport } from './routes/$libraryId/$version'
import { Route as StatsNpmIndexRouteImport } from './routes/stats/npm/index'
import { Route as LibrariesBlogIndexRouteImport } from './routes/_libraries/blog.index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as LibrariesBlogSplatRouteImport } from './routes/_libraries/blog.$'
import { Route as LibraryIdVersionDocsRouteImport } from './routes/$libraryId/$version.docs'
import { Route as LibrariesVirtualVersionIndexRouteImport } from './routes/_libraries/virtual.$version.index'
import { Route as LibrariesTableVersionIndexRouteImport } from './routes/_libraries/table.$version.index'
import { Route as LibrariesStoreVersionIndexRouteImport } from './routes/_libraries/store.$version.index'
import { Route as LibrariesStartVersionIndexRouteImport } from './routes/_libraries/start.$version.index'
import { Route as LibrariesRouterVersionIndexRouteImport } from './routes/_libraries/router.$version.index'
import { Route as LibrariesRangerVersionIndexRouteImport } from './routes/_libraries/ranger.$version.index'
import { Route as LibrariesQueryVersionIndexRouteImport } from './routes/_libraries/query.$version.index'
import { Route as LibrariesPacerVersionIndexRouteImport } from './routes/_libraries/pacer.$version.index'
import { Route as LibrariesFormVersionIndexRouteImport } from './routes/_libraries/form.$version.index'
import { Route as LibrariesDevtoolsVersionIndexRouteImport } from './routes/_libraries/devtools.$version.index'
import { Route as LibrariesDbVersionIndexRouteImport } from './routes/_libraries/db.$version.index'
import { Route as LibrariesConfigVersionIndexRouteImport } from './routes/_libraries/config.$version.index'
import { Route as LibraryIdVersionDocsIndexRouteImport } from './routes/$libraryId/$version.docs.index'
import { Route as LibraryIdVersionDocsChar123Char125DotmdRouteImport } from './routes/$libraryId/$version.docs.{$}[.]md'
import { Route as LibraryIdVersionDocsContributorsRouteImport } from './routes/$libraryId/$version.docs.contributors'
import { Route as LibraryIdVersionDocsCommunityResourcesDotmdRouteImport } from './routes/$libraryId/$version.docs.community-resources[.]md'
import { Route as LibraryIdVersionDocsSplatRouteImport } from './routes/$libraryId/$version.docs.$'
import { Route as LibraryIdVersionDocsFrameworkIndexRouteImport } from './routes/$libraryId/$version.docs.framework.index'
import { Route as LibraryIdVersionDocsFrameworkFrameworkIndexRouteImport } from './routes/$libraryId/$version.docs.framework.$framework.index'
import { Route as LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRouteImport } from './routes/$libraryId/$version.docs.framework.$framework.{$}[.]md'
import { Route as LibraryIdVersionDocsFrameworkFrameworkSplatRouteImport } from './routes/$libraryId/$version.docs.framework.$framework.$'
import { Route as LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRouteImport } from './routes/$libraryId/$version.docs.framework.$framework.examples.$'

const SponsorsEmbedRoute = SponsorsEmbedRouteImport.update({
  id: '/sponsors-embed',
  path: '/sponsors-embed',
  getParentRoute: () => rootRouteImport,
} as any)
const PartnersEmbedRoute = PartnersEmbedRouteImport.update({
  id: '/partners-embed',
  path: '/partners-embed',
  getParentRoute: () => rootRouteImport,
} as any)
const MerchRoute = MerchRouteImport.update({
  id: '/merch',
  path: '/merch',
  getParentRoute: () => rootRouteImport,
} as any)
const BuilderRoute = BuilderRouteImport.update({
  id: '/builder',
  path: '/builder',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const LibrariesRouteRoute = LibrariesRouteRouteImport.update({
  id: '/_libraries',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryIdRouteRoute = LibraryIdRouteRouteImport.update({
  id: '/$libraryId',
  path: '/$libraryId',
  getParentRoute: () => rootRouteImport,
} as any)
const StatsIndexRoute = StatsIndexRouteImport.update({
  id: '/stats/',
  path: '/stats/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const LibrariesIndexRoute = LibrariesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibraryIdIndexRoute = LibraryIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LibraryIdRouteRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRouteRoute,
} as any)
const LibrariesTermsRoute = LibrariesTermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesSupportRoute = LibrariesSupportRouteImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesPrivacyRoute = LibrariesPrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesPartnersRoute = LibrariesPartnersRouteImport.update({
  id: '/partners',
  path: '/partners',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesPaidSupportRoute = LibrariesPaidSupportRouteImport.update({
  id: '/paid-support',
  path: '/paid-support',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesMaintainersRoute = LibrariesMaintainersRouteImport.update({
  id: '/maintainers',
  path: '/maintainers',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesLoginRoute = LibrariesLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesLearnRoute = LibrariesLearnRouteImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesEthosRoute = LibrariesEthosRouteImport.update({
  id: '/ethos',
  path: '/ethos',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesDashboardRoute = LibrariesDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesBrandGuideRoute = LibrariesBrandGuideRouteImport.update({
  id: '/brand-guide',
  path: '/brand-guide',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesBlogRoute = LibrariesBlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesAccountRoute = LibrariesAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibraryIdVersionRoute = LibraryIdVersionRouteImport.update({
  id: '/$version',
  path: '/$version',
  getParentRoute: () => LibraryIdRouteRoute,
} as any)
const StatsNpmIndexRoute = StatsNpmIndexRouteImport.update({
  id: '/stats/npm/',
  path: '/stats/npm/',
  getParentRoute: () => rootRouteImport,
} as any)
const LibrariesBlogIndexRoute = LibrariesBlogIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LibrariesBlogRoute,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const LibrariesBlogSplatRoute = LibrariesBlogSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => LibrariesBlogRoute,
} as any)
const LibraryIdVersionDocsRoute = LibraryIdVersionDocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => LibraryIdVersionRoute,
} as any)
const LibrariesVirtualVersionIndexRoute =
  LibrariesVirtualVersionIndexRouteImport.update({
    id: '/virtual/$version/',
    path: '/virtual/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesTableVersionIndexRoute =
  LibrariesTableVersionIndexRouteImport.update({
    id: '/table/$version/',
    path: '/table/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesStoreVersionIndexRoute =
  LibrariesStoreVersionIndexRouteImport.update({
    id: '/store/$version/',
    path: '/store/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesStartVersionIndexRoute =
  LibrariesStartVersionIndexRouteImport.update({
    id: '/start/$version/',
    path: '/start/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesRouterVersionIndexRoute =
  LibrariesRouterVersionIndexRouteImport.update({
    id: '/router/$version/',
    path: '/router/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesRangerVersionIndexRoute =
  LibrariesRangerVersionIndexRouteImport.update({
    id: '/ranger/$version/',
    path: '/ranger/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesQueryVersionIndexRoute =
  LibrariesQueryVersionIndexRouteImport.update({
    id: '/query/$version/',
    path: '/query/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesPacerVersionIndexRoute =
  LibrariesPacerVersionIndexRouteImport.update({
    id: '/pacer/$version/',
    path: '/pacer/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesFormVersionIndexRoute =
  LibrariesFormVersionIndexRouteImport.update({
    id: '/form/$version/',
    path: '/form/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesDevtoolsVersionIndexRoute =
  LibrariesDevtoolsVersionIndexRouteImport.update({
    id: '/devtools/$version/',
    path: '/devtools/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibrariesDbVersionIndexRoute = LibrariesDbVersionIndexRouteImport.update({
  id: '/db/$version/',
  path: '/db/$version/',
  getParentRoute: () => LibrariesRouteRoute,
} as any)
const LibrariesConfigVersionIndexRoute =
  LibrariesConfigVersionIndexRouteImport.update({
    id: '/config/$version/',
    path: '/config/$version/',
    getParentRoute: () => LibrariesRouteRoute,
  } as any)
const LibraryIdVersionDocsIndexRoute =
  LibraryIdVersionDocsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsChar123Char125DotmdRoute =
  LibraryIdVersionDocsChar123Char125DotmdRouteImport.update({
    id: '/{$}.md',
    path: '/{$}.md',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsContributorsRoute =
  LibraryIdVersionDocsContributorsRouteImport.update({
    id: '/contributors',
    path: '/contributors',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsCommunityResourcesDotmdRoute =
  LibraryIdVersionDocsCommunityResourcesDotmdRouteImport.update({
    id: '/community-resources.md',
    path: '/community-resources.md',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsSplatRoute =
  LibraryIdVersionDocsSplatRouteImport.update({
    id: '/$',
    path: '/$',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsFrameworkIndexRoute =
  LibraryIdVersionDocsFrameworkIndexRouteImport.update({
    id: '/framework/',
    path: '/framework/',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsFrameworkFrameworkIndexRoute =
  LibraryIdVersionDocsFrameworkFrameworkIndexRouteImport.update({
    id: '/framework/$framework/',
    path: '/framework/$framework/',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute =
  LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRouteImport.update({
    id: '/framework/$framework/{$}.md',
    path: '/framework/$framework/{$}.md',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsFrameworkFrameworkSplatRoute =
  LibraryIdVersionDocsFrameworkFrameworkSplatRouteImport.update({
    id: '/framework/$framework/$',
    path: '/framework/$framework/$',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)
const LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute =
  LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRouteImport.update({
    id: '/framework/$framework/examples/$',
    path: '/framework/$framework/examples/$',
    getParentRoute: () => LibraryIdVersionDocsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$libraryId': typeof LibraryIdRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/builder': typeof BuilderRoute
  '/merch': typeof MerchRoute
  '/partners-embed': typeof PartnersEmbedRoute
  '/sponsors-embed': typeof SponsorsEmbedRoute
  '/$libraryId/$version': typeof LibraryIdVersionRouteWithChildren
  '/account': typeof LibrariesAccountRoute
  '/blog': typeof LibrariesBlogRouteWithChildren
  '/brand-guide': typeof LibrariesBrandGuideRoute
  '/dashboard': typeof LibrariesDashboardRoute
  '/ethos': typeof LibrariesEthosRoute
  '/learn': typeof LibrariesLearnRoute
  '/login': typeof LibrariesLoginRoute
  '/maintainers': typeof LibrariesMaintainersRoute
  '/paid-support': typeof LibrariesPaidSupportRoute
  '/partners': typeof LibrariesPartnersRoute
  '/privacy': typeof LibrariesPrivacyRoute
  '/support': typeof LibrariesSupportRoute
  '/terms': typeof LibrariesTermsRoute
  '/admin/users': typeof AdminUsersRoute
  '/$libraryId/': typeof LibraryIdIndexRoute
  '/': typeof LibrariesIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/stats': typeof StatsIndexRoute
  '/$libraryId/$version/docs': typeof LibraryIdVersionDocsRouteWithChildren
  '/blog/$': typeof LibrariesBlogSplatRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/blog/': typeof LibrariesBlogIndexRoute
  '/stats/npm': typeof StatsNpmIndexRoute
  '/$libraryId/$version/docs/$': typeof LibraryIdVersionDocsSplatRoute
  '/$libraryId/$version/docs/community-resources.md': typeof LibraryIdVersionDocsCommunityResourcesDotmdRoute
  '/$libraryId/$version/docs/contributors': typeof LibraryIdVersionDocsContributorsRoute
  '/$libraryId/$version/docs/{$}.md': typeof LibraryIdVersionDocsChar123Char125DotmdRoute
  '/$libraryId/$version/docs/': typeof LibraryIdVersionDocsIndexRoute
  '/config/$version': typeof LibrariesConfigVersionIndexRoute
  '/db/$version': typeof LibrariesDbVersionIndexRoute
  '/devtools/$version': typeof LibrariesDevtoolsVersionIndexRoute
  '/form/$version': typeof LibrariesFormVersionIndexRoute
  '/pacer/$version': typeof LibrariesPacerVersionIndexRoute
  '/query/$version': typeof LibrariesQueryVersionIndexRoute
  '/ranger/$version': typeof LibrariesRangerVersionIndexRoute
  '/router/$version': typeof LibrariesRouterVersionIndexRoute
  '/start/$version': typeof LibrariesStartVersionIndexRoute
  '/store/$version': typeof LibrariesStoreVersionIndexRoute
  '/table/$version': typeof LibrariesTableVersionIndexRoute
  '/virtual/$version': typeof LibrariesVirtualVersionIndexRoute
  '/$libraryId/$version/docs/framework': typeof LibraryIdVersionDocsFrameworkIndexRoute
  '/$libraryId/$version/docs/framework/$framework/$': typeof LibraryIdVersionDocsFrameworkFrameworkSplatRoute
  '/$libraryId/$version/docs/framework/$framework/{$}.md': typeof LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute
  '/$libraryId/$version/docs/framework/$framework': typeof LibraryIdVersionDocsFrameworkFrameworkIndexRoute
  '/$libraryId/$version/docs/framework/$framework/examples/$': typeof LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute
}
export interface FileRoutesByTo {
  '/builder': typeof BuilderRoute
  '/merch': typeof MerchRoute
  '/partners-embed': typeof PartnersEmbedRoute
  '/sponsors-embed': typeof SponsorsEmbedRoute
  '/$libraryId/$version': typeof LibraryIdVersionRouteWithChildren
  '/account': typeof LibrariesAccountRoute
  '/brand-guide': typeof LibrariesBrandGuideRoute
  '/dashboard': typeof LibrariesDashboardRoute
  '/ethos': typeof LibrariesEthosRoute
  '/learn': typeof LibrariesLearnRoute
  '/login': typeof LibrariesLoginRoute
  '/maintainers': typeof LibrariesMaintainersRoute
  '/paid-support': typeof LibrariesPaidSupportRoute
  '/partners': typeof LibrariesPartnersRoute
  '/privacy': typeof LibrariesPrivacyRoute
  '/support': typeof LibrariesSupportRoute
  '/terms': typeof LibrariesTermsRoute
  '/admin/users': typeof AdminUsersRoute
  '/$libraryId': typeof LibraryIdIndexRoute
  '/': typeof LibrariesIndexRoute
  '/admin': typeof AdminIndexRoute
  '/stats': typeof StatsIndexRoute
  '/blog/$': typeof LibrariesBlogSplatRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/blog': typeof LibrariesBlogIndexRoute
  '/stats/npm': typeof StatsNpmIndexRoute
  '/$libraryId/$version/docs/$': typeof LibraryIdVersionDocsSplatRoute
  '/$libraryId/$version/docs/community-resources.md': typeof LibraryIdVersionDocsCommunityResourcesDotmdRoute
  '/$libraryId/$version/docs/contributors': typeof LibraryIdVersionDocsContributorsRoute
  '/$libraryId/$version/docs/{$}.md': typeof LibraryIdVersionDocsChar123Char125DotmdRoute
  '/$libraryId/$version/docs': typeof LibraryIdVersionDocsIndexRoute
  '/config/$version': typeof LibrariesConfigVersionIndexRoute
  '/db/$version': typeof LibrariesDbVersionIndexRoute
  '/devtools/$version': typeof LibrariesDevtoolsVersionIndexRoute
  '/form/$version': typeof LibrariesFormVersionIndexRoute
  '/pacer/$version': typeof LibrariesPacerVersionIndexRoute
  '/query/$version': typeof LibrariesQueryVersionIndexRoute
  '/ranger/$version': typeof LibrariesRangerVersionIndexRoute
  '/router/$version': typeof LibrariesRouterVersionIndexRoute
  '/start/$version': typeof LibrariesStartVersionIndexRoute
  '/store/$version': typeof LibrariesStoreVersionIndexRoute
  '/table/$version': typeof LibrariesTableVersionIndexRoute
  '/virtual/$version': typeof LibrariesVirtualVersionIndexRoute
  '/$libraryId/$version/docs/framework': typeof LibraryIdVersionDocsFrameworkIndexRoute
  '/$libraryId/$version/docs/framework/$framework/$': typeof LibraryIdVersionDocsFrameworkFrameworkSplatRoute
  '/$libraryId/$version/docs/framework/$framework/{$}.md': typeof LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute
  '/$libraryId/$version/docs/framework/$framework': typeof LibraryIdVersionDocsFrameworkFrameworkIndexRoute
  '/$libraryId/$version/docs/framework/$framework/examples/$': typeof LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$libraryId': typeof LibraryIdRouteRouteWithChildren
  '/_libraries': typeof LibrariesRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/builder': typeof BuilderRoute
  '/merch': typeof MerchRoute
  '/partners-embed': typeof PartnersEmbedRoute
  '/sponsors-embed': typeof SponsorsEmbedRoute
  '/$libraryId/$version': typeof LibraryIdVersionRouteWithChildren
  '/_libraries/account': typeof LibrariesAccountRoute
  '/_libraries/blog': typeof LibrariesBlogRouteWithChildren
  '/_libraries/brand-guide': typeof LibrariesBrandGuideRoute
  '/_libraries/dashboard': typeof LibrariesDashboardRoute
  '/_libraries/ethos': typeof LibrariesEthosRoute
  '/_libraries/learn': typeof LibrariesLearnRoute
  '/_libraries/login': typeof LibrariesLoginRoute
  '/_libraries/maintainers': typeof LibrariesMaintainersRoute
  '/_libraries/paid-support': typeof LibrariesPaidSupportRoute
  '/_libraries/partners': typeof LibrariesPartnersRoute
  '/_libraries/privacy': typeof LibrariesPrivacyRoute
  '/_libraries/support': typeof LibrariesSupportRoute
  '/_libraries/terms': typeof LibrariesTermsRoute
  '/admin/users': typeof AdminUsersRoute
  '/$libraryId/': typeof LibraryIdIndexRoute
  '/_libraries/': typeof LibrariesIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/stats/': typeof StatsIndexRoute
  '/$libraryId/$version/docs': typeof LibraryIdVersionDocsRouteWithChildren
  '/_libraries/blog/$': typeof LibrariesBlogSplatRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/_libraries/blog/': typeof LibrariesBlogIndexRoute
  '/stats/npm/': typeof StatsNpmIndexRoute
  '/$libraryId/$version/docs/$': typeof LibraryIdVersionDocsSplatRoute
  '/$libraryId/$version/docs/community-resources.md': typeof LibraryIdVersionDocsCommunityResourcesDotmdRoute
  '/$libraryId/$version/docs/contributors': typeof LibraryIdVersionDocsContributorsRoute
  '/$libraryId/$version/docs/{$}.md': typeof LibraryIdVersionDocsChar123Char125DotmdRoute
  '/$libraryId/$version/docs/': typeof LibraryIdVersionDocsIndexRoute
  '/_libraries/config/$version/': typeof LibrariesConfigVersionIndexRoute
  '/_libraries/db/$version/': typeof LibrariesDbVersionIndexRoute
  '/_libraries/devtools/$version/': typeof LibrariesDevtoolsVersionIndexRoute
  '/_libraries/form/$version/': typeof LibrariesFormVersionIndexRoute
  '/_libraries/pacer/$version/': typeof LibrariesPacerVersionIndexRoute
  '/_libraries/query/$version/': typeof LibrariesQueryVersionIndexRoute
  '/_libraries/ranger/$version/': typeof LibrariesRangerVersionIndexRoute
  '/_libraries/router/$version/': typeof LibrariesRouterVersionIndexRoute
  '/_libraries/start/$version/': typeof LibrariesStartVersionIndexRoute
  '/_libraries/store/$version/': typeof LibrariesStoreVersionIndexRoute
  '/_libraries/table/$version/': typeof LibrariesTableVersionIndexRoute
  '/_libraries/virtual/$version/': typeof LibrariesVirtualVersionIndexRoute
  '/$libraryId/$version/docs/framework/': typeof LibraryIdVersionDocsFrameworkIndexRoute
  '/$libraryId/$version/docs/framework/$framework/$': typeof LibraryIdVersionDocsFrameworkFrameworkSplatRoute
  '/$libraryId/$version/docs/framework/$framework/{$}.md': typeof LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute
  '/$libraryId/$version/docs/framework/$framework/': typeof LibraryIdVersionDocsFrameworkFrameworkIndexRoute
  '/$libraryId/$version/docs/framework/$framework/examples/$': typeof LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$libraryId'
    | '/admin'
    | '/builder'
    | '/merch'
    | '/partners-embed'
    | '/sponsors-embed'
    | '/$libraryId/$version'
    | '/account'
    | '/blog'
    | '/brand-guide'
    | '/dashboard'
    | '/ethos'
    | '/learn'
    | '/login'
    | '/maintainers'
    | '/paid-support'
    | '/partners'
    | '/privacy'
    | '/support'
    | '/terms'
    | '/admin/users'
    | '/$libraryId/'
    | '/'
    | '/admin/'
    | '/stats'
    | '/$libraryId/$version/docs'
    | '/blog/$'
    | '/api/auth/$'
    | '/blog/'
    | '/stats/npm'
    | '/$libraryId/$version/docs/$'
    | '/$libraryId/$version/docs/community-resources.md'
    | '/$libraryId/$version/docs/contributors'
    | '/$libraryId/$version/docs/{$}.md'
    | '/$libraryId/$version/docs/'
    | '/config/$version'
    | '/db/$version'
    | '/devtools/$version'
    | '/form/$version'
    | '/pacer/$version'
    | '/query/$version'
    | '/ranger/$version'
    | '/router/$version'
    | '/start/$version'
    | '/store/$version'
    | '/table/$version'
    | '/virtual/$version'
    | '/$libraryId/$version/docs/framework'
    | '/$libraryId/$version/docs/framework/$framework/$'
    | '/$libraryId/$version/docs/framework/$framework/{$}.md'
    | '/$libraryId/$version/docs/framework/$framework'
    | '/$libraryId/$version/docs/framework/$framework/examples/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/builder'
    | '/merch'
    | '/partners-embed'
    | '/sponsors-embed'
    | '/$libraryId/$version'
    | '/account'
    | '/brand-guide'
    | '/dashboard'
    | '/ethos'
    | '/learn'
    | '/login'
    | '/maintainers'
    | '/paid-support'
    | '/partners'
    | '/privacy'
    | '/support'
    | '/terms'
    | '/admin/users'
    | '/$libraryId'
    | '/'
    | '/admin'
    | '/stats'
    | '/blog/$'
    | '/api/auth/$'
    | '/blog'
    | '/stats/npm'
    | '/$libraryId/$version/docs/$'
    | '/$libraryId/$version/docs/community-resources.md'
    | '/$libraryId/$version/docs/contributors'
    | '/$libraryId/$version/docs/{$}.md'
    | '/$libraryId/$version/docs'
    | '/config/$version'
    | '/db/$version'
    | '/devtools/$version'
    | '/form/$version'
    | '/pacer/$version'
    | '/query/$version'
    | '/ranger/$version'
    | '/router/$version'
    | '/start/$version'
    | '/store/$version'
    | '/table/$version'
    | '/virtual/$version'
    | '/$libraryId/$version/docs/framework'
    | '/$libraryId/$version/docs/framework/$framework/$'
    | '/$libraryId/$version/docs/framework/$framework/{$}.md'
    | '/$libraryId/$version/docs/framework/$framework'
    | '/$libraryId/$version/docs/framework/$framework/examples/$'
  id:
    | '__root__'
    | '/$libraryId'
    | '/_libraries'
    | '/admin'
    | '/builder'
    | '/merch'
    | '/partners-embed'
    | '/sponsors-embed'
    | '/$libraryId/$version'
    | '/_libraries/account'
    | '/_libraries/blog'
    | '/_libraries/brand-guide'
    | '/_libraries/dashboard'
    | '/_libraries/ethos'
    | '/_libraries/learn'
    | '/_libraries/login'
    | '/_libraries/maintainers'
    | '/_libraries/paid-support'
    | '/_libraries/partners'
    | '/_libraries/privacy'
    | '/_libraries/support'
    | '/_libraries/terms'
    | '/admin/users'
    | '/$libraryId/'
    | '/_libraries/'
    | '/admin/'
    | '/stats/'
    | '/$libraryId/$version/docs'
    | '/_libraries/blog/$'
    | '/api/auth/$'
    | '/_libraries/blog/'
    | '/stats/npm/'
    | '/$libraryId/$version/docs/$'
    | '/$libraryId/$version/docs/community-resources.md'
    | '/$libraryId/$version/docs/contributors'
    | '/$libraryId/$version/docs/{$}.md'
    | '/$libraryId/$version/docs/'
    | '/_libraries/config/$version/'
    | '/_libraries/db/$version/'
    | '/_libraries/devtools/$version/'
    | '/_libraries/form/$version/'
    | '/_libraries/pacer/$version/'
    | '/_libraries/query/$version/'
    | '/_libraries/ranger/$version/'
    | '/_libraries/router/$version/'
    | '/_libraries/start/$version/'
    | '/_libraries/store/$version/'
    | '/_libraries/table/$version/'
    | '/_libraries/virtual/$version/'
    | '/$libraryId/$version/docs/framework/'
    | '/$libraryId/$version/docs/framework/$framework/$'
    | '/$libraryId/$version/docs/framework/$framework/{$}.md'
    | '/$libraryId/$version/docs/framework/$framework/'
    | '/$libraryId/$version/docs/framework/$framework/examples/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LibraryIdRouteRoute: typeof LibraryIdRouteRouteWithChildren
  LibrariesRouteRoute: typeof LibrariesRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  BuilderRoute: typeof BuilderRoute
  MerchRoute: typeof MerchRoute
  PartnersEmbedRoute: typeof PartnersEmbedRoute
  SponsorsEmbedRoute: typeof SponsorsEmbedRoute
  StatsIndexRoute: typeof StatsIndexRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  StatsNpmIndexRoute: typeof StatsNpmIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sponsors-embed': {
      id: '/sponsors-embed'
      path: '/sponsors-embed'
      fullPath: '/sponsors-embed'
      preLoaderRoute: typeof SponsorsEmbedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/partners-embed': {
      id: '/partners-embed'
      path: '/partners-embed'
      fullPath: '/partners-embed'
      preLoaderRoute: typeof PartnersEmbedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/merch': {
      id: '/merch'
      path: '/merch'
      fullPath: '/merch'
      preLoaderRoute: typeof MerchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/builder': {
      id: '/builder'
      path: '/builder'
      fullPath: '/builder'
      preLoaderRoute: typeof BuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_libraries': {
      id: '/_libraries'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LibrariesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$libraryId': {
      id: '/$libraryId'
      path: '/$libraryId'
      fullPath: '/$libraryId'
      preLoaderRoute: typeof LibraryIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stats/': {
      id: '/stats/'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof StatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/_libraries/': {
      id: '/_libraries/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LibrariesIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/$libraryId/': {
      id: '/$libraryId/'
      path: '/'
      fullPath: '/$libraryId/'
      preLoaderRoute: typeof LibraryIdIndexRouteImport
      parentRoute: typeof LibraryIdRouteRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/_libraries/terms': {
      id: '/_libraries/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof LibrariesTermsRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/support': {
      id: '/_libraries/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof LibrariesSupportRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/privacy': {
      id: '/_libraries/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof LibrariesPrivacyRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/partners': {
      id: '/_libraries/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof LibrariesPartnersRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/paid-support': {
      id: '/_libraries/paid-support'
      path: '/paid-support'
      fullPath: '/paid-support'
      preLoaderRoute: typeof LibrariesPaidSupportRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/maintainers': {
      id: '/_libraries/maintainers'
      path: '/maintainers'
      fullPath: '/maintainers'
      preLoaderRoute: typeof LibrariesMaintainersRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/login': {
      id: '/_libraries/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LibrariesLoginRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/learn': {
      id: '/_libraries/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LibrariesLearnRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/ethos': {
      id: '/_libraries/ethos'
      path: '/ethos'
      fullPath: '/ethos'
      preLoaderRoute: typeof LibrariesEthosRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/dashboard': {
      id: '/_libraries/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LibrariesDashboardRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/brand-guide': {
      id: '/_libraries/brand-guide'
      path: '/brand-guide'
      fullPath: '/brand-guide'
      preLoaderRoute: typeof LibrariesBrandGuideRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/blog': {
      id: '/_libraries/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof LibrariesBlogRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/account': {
      id: '/_libraries/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LibrariesAccountRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/$libraryId/$version': {
      id: '/$libraryId/$version'
      path: '/$version'
      fullPath: '/$libraryId/$version'
      preLoaderRoute: typeof LibraryIdVersionRouteImport
      parentRoute: typeof LibraryIdRouteRoute
    }
    '/stats/npm/': {
      id: '/stats/npm/'
      path: '/stats/npm'
      fullPath: '/stats/npm'
      preLoaderRoute: typeof StatsNpmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_libraries/blog/': {
      id: '/_libraries/blog/'
      path: '/'
      fullPath: '/blog/'
      preLoaderRoute: typeof LibrariesBlogIndexRouteImport
      parentRoute: typeof LibrariesBlogRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_libraries/blog/$': {
      id: '/_libraries/blog/$'
      path: '/$'
      fullPath: '/blog/$'
      preLoaderRoute: typeof LibrariesBlogSplatRouteImport
      parentRoute: typeof LibrariesBlogRoute
    }
    '/$libraryId/$version/docs': {
      id: '/$libraryId/$version/docs'
      path: '/docs'
      fullPath: '/$libraryId/$version/docs'
      preLoaderRoute: typeof LibraryIdVersionDocsRouteImport
      parentRoute: typeof LibraryIdVersionRoute
    }
    '/_libraries/virtual/$version/': {
      id: '/_libraries/virtual/$version/'
      path: '/virtual/$version'
      fullPath: '/virtual/$version'
      preLoaderRoute: typeof LibrariesVirtualVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/table/$version/': {
      id: '/_libraries/table/$version/'
      path: '/table/$version'
      fullPath: '/table/$version'
      preLoaderRoute: typeof LibrariesTableVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/store/$version/': {
      id: '/_libraries/store/$version/'
      path: '/store/$version'
      fullPath: '/store/$version'
      preLoaderRoute: typeof LibrariesStoreVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/start/$version/': {
      id: '/_libraries/start/$version/'
      path: '/start/$version'
      fullPath: '/start/$version'
      preLoaderRoute: typeof LibrariesStartVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/router/$version/': {
      id: '/_libraries/router/$version/'
      path: '/router/$version'
      fullPath: '/router/$version'
      preLoaderRoute: typeof LibrariesRouterVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/ranger/$version/': {
      id: '/_libraries/ranger/$version/'
      path: '/ranger/$version'
      fullPath: '/ranger/$version'
      preLoaderRoute: typeof LibrariesRangerVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/query/$version/': {
      id: '/_libraries/query/$version/'
      path: '/query/$version'
      fullPath: '/query/$version'
      preLoaderRoute: typeof LibrariesQueryVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/pacer/$version/': {
      id: '/_libraries/pacer/$version/'
      path: '/pacer/$version'
      fullPath: '/pacer/$version'
      preLoaderRoute: typeof LibrariesPacerVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/form/$version/': {
      id: '/_libraries/form/$version/'
      path: '/form/$version'
      fullPath: '/form/$version'
      preLoaderRoute: typeof LibrariesFormVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/devtools/$version/': {
      id: '/_libraries/devtools/$version/'
      path: '/devtools/$version'
      fullPath: '/devtools/$version'
      preLoaderRoute: typeof LibrariesDevtoolsVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/db/$version/': {
      id: '/_libraries/db/$version/'
      path: '/db/$version'
      fullPath: '/db/$version'
      preLoaderRoute: typeof LibrariesDbVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/_libraries/config/$version/': {
      id: '/_libraries/config/$version/'
      path: '/config/$version'
      fullPath: '/config/$version'
      preLoaderRoute: typeof LibrariesConfigVersionIndexRouteImport
      parentRoute: typeof LibrariesRouteRoute
    }
    '/$libraryId/$version/docs/': {
      id: '/$libraryId/$version/docs/'
      path: '/'
      fullPath: '/$libraryId/$version/docs/'
      preLoaderRoute: typeof LibraryIdVersionDocsIndexRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/{$}.md': {
      id: '/$libraryId/$version/docs/{$}.md'
      path: '/{$}.md'
      fullPath: '/$libraryId/$version/docs/{$}.md'
      preLoaderRoute: typeof LibraryIdVersionDocsChar123Char125DotmdRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/contributors': {
      id: '/$libraryId/$version/docs/contributors'
      path: '/contributors'
      fullPath: '/$libraryId/$version/docs/contributors'
      preLoaderRoute: typeof LibraryIdVersionDocsContributorsRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/community-resources.md': {
      id: '/$libraryId/$version/docs/community-resources.md'
      path: '/community-resources.md'
      fullPath: '/$libraryId/$version/docs/community-resources.md'
      preLoaderRoute: typeof LibraryIdVersionDocsCommunityResourcesDotmdRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/$': {
      id: '/$libraryId/$version/docs/$'
      path: '/$'
      fullPath: '/$libraryId/$version/docs/$'
      preLoaderRoute: typeof LibraryIdVersionDocsSplatRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/framework/': {
      id: '/$libraryId/$version/docs/framework/'
      path: '/framework'
      fullPath: '/$libraryId/$version/docs/framework'
      preLoaderRoute: typeof LibraryIdVersionDocsFrameworkIndexRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/framework/$framework/': {
      id: '/$libraryId/$version/docs/framework/$framework/'
      path: '/framework/$framework'
      fullPath: '/$libraryId/$version/docs/framework/$framework'
      preLoaderRoute: typeof LibraryIdVersionDocsFrameworkFrameworkIndexRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/framework/$framework/{$}.md': {
      id: '/$libraryId/$version/docs/framework/$framework/{$}.md'
      path: '/framework/$framework/{$}.md'
      fullPath: '/$libraryId/$version/docs/framework/$framework/{$}.md'
      preLoaderRoute: typeof LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/framework/$framework/$': {
      id: '/$libraryId/$version/docs/framework/$framework/$'
      path: '/framework/$framework/$'
      fullPath: '/$libraryId/$version/docs/framework/$framework/$'
      preLoaderRoute: typeof LibraryIdVersionDocsFrameworkFrameworkSplatRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
    '/$libraryId/$version/docs/framework/$framework/examples/$': {
      id: '/$libraryId/$version/docs/framework/$framework/examples/$'
      path: '/framework/$framework/examples/$'
      fullPath: '/$libraryId/$version/docs/framework/$framework/examples/$'
      preLoaderRoute: typeof LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRouteImport
      parentRoute: typeof LibraryIdVersionDocsRoute
    }
  }
}

interface LibraryIdVersionDocsRouteChildren {
  LibraryIdVersionDocsSplatRoute: typeof LibraryIdVersionDocsSplatRoute
  LibraryIdVersionDocsCommunityResourcesDotmdRoute: typeof LibraryIdVersionDocsCommunityResourcesDotmdRoute
  LibraryIdVersionDocsContributorsRoute: typeof LibraryIdVersionDocsContributorsRoute
  LibraryIdVersionDocsChar123Char125DotmdRoute: typeof LibraryIdVersionDocsChar123Char125DotmdRoute
  LibraryIdVersionDocsIndexRoute: typeof LibraryIdVersionDocsIndexRoute
  LibraryIdVersionDocsFrameworkIndexRoute: typeof LibraryIdVersionDocsFrameworkIndexRoute
  LibraryIdVersionDocsFrameworkFrameworkSplatRoute: typeof LibraryIdVersionDocsFrameworkFrameworkSplatRoute
  LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute: typeof LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute
  LibraryIdVersionDocsFrameworkFrameworkIndexRoute: typeof LibraryIdVersionDocsFrameworkFrameworkIndexRoute
  LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute: typeof LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute
}

const LibraryIdVersionDocsRouteChildren: LibraryIdVersionDocsRouteChildren = {
  LibraryIdVersionDocsSplatRoute: LibraryIdVersionDocsSplatRoute,
  LibraryIdVersionDocsCommunityResourcesDotmdRoute:
    LibraryIdVersionDocsCommunityResourcesDotmdRoute,
  LibraryIdVersionDocsContributorsRoute: LibraryIdVersionDocsContributorsRoute,
  LibraryIdVersionDocsChar123Char125DotmdRoute:
    LibraryIdVersionDocsChar123Char125DotmdRoute,
  LibraryIdVersionDocsIndexRoute: LibraryIdVersionDocsIndexRoute,
  LibraryIdVersionDocsFrameworkIndexRoute:
    LibraryIdVersionDocsFrameworkIndexRoute,
  LibraryIdVersionDocsFrameworkFrameworkSplatRoute:
    LibraryIdVersionDocsFrameworkFrameworkSplatRoute,
  LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute:
    LibraryIdVersionDocsFrameworkFrameworkChar123Char125DotmdRoute,
  LibraryIdVersionDocsFrameworkFrameworkIndexRoute:
    LibraryIdVersionDocsFrameworkFrameworkIndexRoute,
  LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute:
    LibraryIdVersionDocsFrameworkFrameworkExamplesSplatRoute,
}

const LibraryIdVersionDocsRouteWithChildren =
  LibraryIdVersionDocsRoute._addFileChildren(LibraryIdVersionDocsRouteChildren)

interface LibraryIdVersionRouteChildren {
  LibraryIdVersionDocsRoute: typeof LibraryIdVersionDocsRouteWithChildren
}

const LibraryIdVersionRouteChildren: LibraryIdVersionRouteChildren = {
  LibraryIdVersionDocsRoute: LibraryIdVersionDocsRouteWithChildren,
}

const LibraryIdVersionRouteWithChildren =
  LibraryIdVersionRoute._addFileChildren(LibraryIdVersionRouteChildren)

interface LibraryIdRouteRouteChildren {
  LibraryIdVersionRoute: typeof LibraryIdVersionRouteWithChildren
  LibraryIdIndexRoute: typeof LibraryIdIndexRoute
}

const LibraryIdRouteRouteChildren: LibraryIdRouteRouteChildren = {
  LibraryIdVersionRoute: LibraryIdVersionRouteWithChildren,
  LibraryIdIndexRoute: LibraryIdIndexRoute,
}

const LibraryIdRouteRouteWithChildren = LibraryIdRouteRoute._addFileChildren(
  LibraryIdRouteRouteChildren,
)

interface LibrariesBlogRouteChildren {
  LibrariesBlogSplatRoute: typeof LibrariesBlogSplatRoute
  LibrariesBlogIndexRoute: typeof LibrariesBlogIndexRoute
}

const LibrariesBlogRouteChildren: LibrariesBlogRouteChildren = {
  LibrariesBlogSplatRoute: LibrariesBlogSplatRoute,
  LibrariesBlogIndexRoute: LibrariesBlogIndexRoute,
}

const LibrariesBlogRouteWithChildren = LibrariesBlogRoute._addFileChildren(
  LibrariesBlogRouteChildren,
)

interface LibrariesRouteRouteChildren {
  LibrariesAccountRoute: typeof LibrariesAccountRoute
  LibrariesBlogRoute: typeof LibrariesBlogRouteWithChildren
  LibrariesBrandGuideRoute: typeof LibrariesBrandGuideRoute
  LibrariesDashboardRoute: typeof LibrariesDashboardRoute
  LibrariesEthosRoute: typeof LibrariesEthosRoute
  LibrariesLearnRoute: typeof LibrariesLearnRoute
  LibrariesLoginRoute: typeof LibrariesLoginRoute
  LibrariesMaintainersRoute: typeof LibrariesMaintainersRoute
  LibrariesPaidSupportRoute: typeof LibrariesPaidSupportRoute
  LibrariesPartnersRoute: typeof LibrariesPartnersRoute
  LibrariesPrivacyRoute: typeof LibrariesPrivacyRoute
  LibrariesSupportRoute: typeof LibrariesSupportRoute
  LibrariesTermsRoute: typeof LibrariesTermsRoute
  LibrariesIndexRoute: typeof LibrariesIndexRoute
  LibrariesConfigVersionIndexRoute: typeof LibrariesConfigVersionIndexRoute
  LibrariesDbVersionIndexRoute: typeof LibrariesDbVersionIndexRoute
  LibrariesDevtoolsVersionIndexRoute: typeof LibrariesDevtoolsVersionIndexRoute
  LibrariesFormVersionIndexRoute: typeof LibrariesFormVersionIndexRoute
  LibrariesPacerVersionIndexRoute: typeof LibrariesPacerVersionIndexRoute
  LibrariesQueryVersionIndexRoute: typeof LibrariesQueryVersionIndexRoute
  LibrariesRangerVersionIndexRoute: typeof LibrariesRangerVersionIndexRoute
  LibrariesRouterVersionIndexRoute: typeof LibrariesRouterVersionIndexRoute
  LibrariesStartVersionIndexRoute: typeof LibrariesStartVersionIndexRoute
  LibrariesStoreVersionIndexRoute: typeof LibrariesStoreVersionIndexRoute
  LibrariesTableVersionIndexRoute: typeof LibrariesTableVersionIndexRoute
  LibrariesVirtualVersionIndexRoute: typeof LibrariesVirtualVersionIndexRoute
}

const LibrariesRouteRouteChildren: LibrariesRouteRouteChildren = {
  LibrariesAccountRoute: LibrariesAccountRoute,
  LibrariesBlogRoute: LibrariesBlogRouteWithChildren,
  LibrariesBrandGuideRoute: LibrariesBrandGuideRoute,
  LibrariesDashboardRoute: LibrariesDashboardRoute,
  LibrariesEthosRoute: LibrariesEthosRoute,
  LibrariesLearnRoute: LibrariesLearnRoute,
  LibrariesLoginRoute: LibrariesLoginRoute,
  LibrariesMaintainersRoute: LibrariesMaintainersRoute,
  LibrariesPaidSupportRoute: LibrariesPaidSupportRoute,
  LibrariesPartnersRoute: LibrariesPartnersRoute,
  LibrariesPrivacyRoute: LibrariesPrivacyRoute,
  LibrariesSupportRoute: LibrariesSupportRoute,
  LibrariesTermsRoute: LibrariesTermsRoute,
  LibrariesIndexRoute: LibrariesIndexRoute,
  LibrariesConfigVersionIndexRoute: LibrariesConfigVersionIndexRoute,
  LibrariesDbVersionIndexRoute: LibrariesDbVersionIndexRoute,
  LibrariesDevtoolsVersionIndexRoute: LibrariesDevtoolsVersionIndexRoute,
  LibrariesFormVersionIndexRoute: LibrariesFormVersionIndexRoute,
  LibrariesPacerVersionIndexRoute: LibrariesPacerVersionIndexRoute,
  LibrariesQueryVersionIndexRoute: LibrariesQueryVersionIndexRoute,
  LibrariesRangerVersionIndexRoute: LibrariesRangerVersionIndexRoute,
  LibrariesRouterVersionIndexRoute: LibrariesRouterVersionIndexRoute,
  LibrariesStartVersionIndexRoute: LibrariesStartVersionIndexRoute,
  LibrariesStoreVersionIndexRoute: LibrariesStoreVersionIndexRoute,
  LibrariesTableVersionIndexRoute: LibrariesTableVersionIndexRoute,
  LibrariesVirtualVersionIndexRoute: LibrariesVirtualVersionIndexRoute,
}

const LibrariesRouteRouteWithChildren = LibrariesRouteRoute._addFileChildren(
  LibrariesRouteRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminUsersRoute: typeof AdminUsersRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminUsersRoute: AdminUsersRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LibraryIdRouteRoute: LibraryIdRouteRouteWithChildren,
  LibrariesRouteRoute: LibrariesRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  BuilderRoute: BuilderRoute,
  MerchRoute: MerchRoute,
  PartnersEmbedRoute: PartnersEmbedRoute,
  SponsorsEmbedRoute: SponsorsEmbedRoute,
  StatsIndexRoute: StatsIndexRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  StatsNpmIndexRoute: StatsNpmIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
